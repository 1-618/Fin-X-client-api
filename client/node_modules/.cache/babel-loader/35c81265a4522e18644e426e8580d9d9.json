{"ast":null,"code":"const isText = RegExp(/^[A-Z ]+$/i);\nconst isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\nconst isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/); // us\n\nconst isZip = RegExp(/^[0-9]{5}([- /]?[0-9]{4})?$/); // us\n\nconst isNumber = RegExp(/^\\d+$/);\nexport default function formValidation(name, value, schema) {\n  const {\n    validate,\n    minLength,\n    maxLength\n  } = schema[name];\n  let error = \"\";\n  if (minLength && value.length < minLength) error = `Minimum ${minLength} characters is required.`;else if (maxLength && value.length > maxLength) error = `Maximum length of ${maxLength} exceeded!`;\n  if (!validate) return;\n\n  switch (validate) {\n    case \"text\":\n      if (!isText.test(value)) error = \"This field accept text only.\";\n      break;\n\n    case \"number\":\n      if (!isNumber.test(value)) error = \"This field accept numbers only.\";\n      break;\n\n    case \"email\":\n      if (!isEmail.test(value)) error = \"Please enter a valid email\";\n      break;\n\n    case \"phone\":\n      if (!isPhone.test(value)) error = \"Please enter a valid phone number. i.e: xxx-xxx-xxxx\";\n      break;\n\n    case \"zip\":\n      if (!isZip.test(value)) error = \"Please enter a valid zip code\";\n      break;\n\n    case \"checkbox\":\n      if (!value) error = \"Please select a value\";\n      break;\n\n    default:\n      break;\n  }\n\n  return error;\n}","map":{"version":3,"sources":["C:/Users/arysc/Fin-X-client-api/client/src/components/InvestorSignUpComponents/Helper/formValidation.js"],"names":["isText","RegExp","isEmail","isPhone","isZip","isNumber","formValidation","name","value","schema","validate","minLength","maxLength","error","length","test"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,MAAM,CAAC,YAAD,CAArB;AACA,MAAMC,OAAO,GAAGD,MAAM,CAAC,0CAAD,CAAtB;AACA,MAAME,OAAO,GAAGF,MAAM,CAAC,uCAAD,CAAtB,C,CAAiE;;AACjE,MAAMG,KAAK,GAAGH,MAAM,CAAC,6BAAD,CAApB,C,CAAqD;;AACrD,MAAMI,QAAQ,GAAGJ,MAAM,CAAC,OAAD,CAAvB;AAEA,eAAe,SAASK,cAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AACxD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAqCH,MAAM,CAACF,IAAD,CAAjD;AACA,MAAIM,KAAK,GAAG,EAAZ;AAEA,MAAIF,SAAS,IAAIH,KAAK,CAACM,MAAN,GAAeH,SAAhC,EACIE,KAAK,GAAI,WAAUF,SAAU,0BAA7B,CADJ,KAEK,IAAIC,SAAS,IAAIJ,KAAK,CAACM,MAAN,GAAeF,SAAhC,EACDC,KAAK,GAAI,qBAAoBD,SAAU,YAAvC;AACJ,MAAI,CAACF,QAAL,EAAe;;AAEf,UAAQA,QAAR;AACI,SAAK,MAAL;AACI,UAAI,CAACV,MAAM,CAACe,IAAP,CAAYP,KAAZ,CAAL,EAAyBK,KAAK,GAAG,8BAAR;AACzB;;AAEJ,SAAK,QAAL;AACI,UAAI,CAACR,QAAQ,CAACU,IAAT,CAAcP,KAAd,CAAL,EAA2BK,KAAK,GAAG,iCAAR;AAC3B;;AAEJ,SAAK,OAAL;AACI,UAAI,CAACX,OAAO,CAACa,IAAR,CAAaP,KAAb,CAAL,EAA0BK,KAAK,GAAG,4BAAR;AAC1B;;AAEJ,SAAK,OAAL;AACI,UAAI,CAACV,OAAO,CAACY,IAAR,CAAaP,KAAb,CAAL,EACIK,KAAK,GAAG,sDAAR;AACJ;;AAEJ,SAAK,KAAL;AACI,UAAI,CAACT,KAAK,CAACW,IAAN,CAAWP,KAAX,CAAL,EAAwBK,KAAK,GAAG,+BAAR;AACxB;;AAEJ,SAAK,UAAL;AACI,UAAI,CAACL,KAAL,EAAYK,KAAK,GAAG,uBAAR;AACZ;;AAEJ;AACI;AA3BR;;AA8BA,SAAOA,KAAP;AACH","sourcesContent":["const isText = RegExp(/^[A-Z ]+$/i);\nconst isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\nconst isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/); // us\nconst isZip = RegExp(/^[0-9]{5}([- /]?[0-9]{4})?$/); // us\nconst isNumber = RegExp(/^\\d+$/);\n\nexport default function formValidation(name, value, schema) {\n    const { validate, minLength, maxLength } = schema[name];\n    let error = \"\";\n\n    if (minLength && value.length < minLength)\n        error = `Minimum ${minLength} characters is required.`;\n    else if (maxLength && value.length > maxLength)\n        error = `Maximum length of ${maxLength} exceeded!`;\n    if (!validate) return;\n\n    switch (validate) {\n        case \"text\":\n            if (!isText.test(value)) error = \"This field accept text only.\";\n            break;\n\n        case \"number\":\n            if (!isNumber.test(value)) error = \"This field accept numbers only.\";\n            break;\n\n        case \"email\":\n            if (!isEmail.test(value)) error = \"Please enter a valid email\";\n            break;\n\n        case \"phone\":\n            if (!isPhone.test(value))\n                error = \"Please enter a valid phone number. i.e: xxx-xxx-xxxx\";\n            break;\n\n        case \"zip\":\n            if (!isZip.test(value)) error = \"Please enter a valid zip code\";\n            break;\n\n        case \"checkbox\":\n            if (!value) error = \"Please select a value\";\n            break;\n\n        default:\n            break;\n    }\n\n    return error;\n}\n"]},"metadata":{},"sourceType":"module"}