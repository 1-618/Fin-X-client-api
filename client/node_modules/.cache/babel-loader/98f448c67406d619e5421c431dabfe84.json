{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arysc\\\\Fin-X-client-api\\\\client\\\\src\\\\components\\\\InvestorSignUpComponents\\\\StepForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport FirstStep from \"./FirstStep\";\nimport SecondStep from \"./SecondStep\";\nimport ThirdStep from \"./ThirdStep\";\nimport InvestorConfirm from \"./investorConfirm\";\nimport Success from \"./Success\";\nimport formValidation from \"./Helper/formValidation\";\nimport InvestorCardCarousel from \"../InvestorCarouselComponents/InvestorCardCarousel\"; // Step titles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst labels = [\"First Step\", \"Second Step\", \"Third Step\", \"Confirmation\"];\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  gender: \"\",\n  date: \"\",\n  city: \"\",\n  phone: \"\"\n};\nconst initialChecks = {\n  fintech: false,\n  cloud: false,\n  edtech: false,\n  healthtech: false,\n  agritech: false,\n  ecommerece: false,\n  saas: false,\n  social: false\n};\nconst fieldsValidation = {\n  firstName: {\n    error: \"\",\n    validate: \"text\",\n    minLength: 2,\n    maxLength: 20\n  },\n  lastName: {\n    error: \"\",\n    validate: \"text\",\n    minLength: 2,\n    maxLength: 20\n  },\n  email: {\n    error: \"\",\n    validate: \"email\"\n  },\n  gender: {},\n  date: {},\n  city: {\n    error: \"\",\n    validate: \"text\",\n    minLength: 3,\n    maxLength: 20\n  },\n  phone: {\n    error: \"\",\n    validate: \"phone\",\n    maxLength: 15\n  }\n};\n\nconst StepForm = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({}); // Proceed to next step\n\n  const handleNext = () => setActiveStep(prev => prev + 1); // Go back to prev step\n\n\n  const handleBack = () => setActiveStep(prev => prev - 1); // Handle form change\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // Set values\n\n    setFormValues(prev => ({ ...prev,\n      [name]: value\n    })); // set errors\n\n    const error = formValidation(name, value, fieldsValidation) || \"\";\n    setFormErrors({\n      [name]: error\n    });\n  };\n\n  const handleSteps = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(FirstStep, {\n          handleNext: handleNext,\n          handleChange: handleChange,\n          values: formValues,\n          formErrors: formErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(SecondStep, {\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleChange: handleChange,\n          values: formValues,\n          formErrors: formErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(ThirdStep, {\n          handleNext: handleNext,\n          handleBack: handleBack //handleCheck={{handleCheck}}\n          // values={checkValues}\n          ,\n          formErrors: formErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(InvestorConfirm, {\n          handleNext: handleNext,\n          handleBack: handleBack,\n          values: formValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: activeStep === labels.length ?\n    /*#__PURE__*/\n    // Last Component\n    _jsxDEV(InvestorCardCarousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this) // <Success values={formValues} />\n    :\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          margin: \"30px 0 50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        style: {\n          margin: \"30px 0 15px\"\n        },\n        alternativeLabel: true,\n        children: labels.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), handleSteps(activeStep)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(StepForm, \"TIWm8CrQHQAPiOcTVghjumIEWf0=\");\n\n_c = StepForm;\nexport default StepForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepForm\");","map":{"version":3,"sources":["C:/Users/arysc/Fin-X-client-api/client/src/components/InvestorSignUpComponents/StepForm.js"],"names":["React","useState","Box","Typography","Stepper","Step","StepLabel","FirstStep","SecondStep","ThirdStep","InvestorConfirm","Success","formValidation","InvestorCardCarousel","labels","initialValues","firstName","lastName","email","gender","date","city","phone","initialChecks","fintech","cloud","edtech","healthtech","agritech","ecommerece","saas","social","fieldsValidation","error","validate","minLength","maxLength","StepForm","activeStep","setActiveStep","formValues","setFormValues","formErrors","setFormErrors","handleNext","prev","handleBack","handleChange","e","name","value","target","handleSteps","step","length","margin","map","label"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport FirstStep from \"./FirstStep\";\nimport SecondStep from \"./SecondStep\";\nimport ThirdStep from \"./ThirdStep\";\nimport InvestorConfirm from \"./investorConfirm\";\nimport Success from \"./Success\";\nimport formValidation from \"./Helper/formValidation\";\nimport InvestorCardCarousel from \"../InvestorCarouselComponents/InvestorCardCarousel\";\n\n// Step titles\nconst labels = [\"First Step\", \"Second Step\",\"Third Step\",\"Confirmation\"];\n\nconst initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    date: \"\",\n    city: \"\",\n    phone: \"\",\n};\n\nconst initialChecks = {\n    fintech: false,\n    cloud: false,\n    edtech: false,\n    healthtech: false,\n    agritech: false,\n    ecommerece: false,\n    saas: false,\n    social: false\n}\n\nconst fieldsValidation = {\n    firstName: {\n        error: \"\",\n        validate: \"text\",\n        minLength: 2,\n        maxLength: 20\n    },\n    lastName: {\n        error: \"\",\n        validate: \"text\",\n        minLength: 2,\n        maxLength: 20\n    },\n    email: {\n        error: \"\",\n        validate: \"email\"\n    },\n    gender: {},\n    date: {},\n    city: {\n        error: \"\",\n        validate: \"text\",\n        minLength: 3,\n        maxLength: 20\n    },\n    phone: {\n        error: \"\",\n        validate: \"phone\",\n        maxLength: 15\n    }\n};\n\nconst StepForm = () => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [formValues, setFormValues] = useState(initialValues);\n    const [formErrors, setFormErrors] = useState({});\n\n\n    // Proceed to next step\n    const handleNext = () => setActiveStep((prev) => prev + 1);\n    // Go back to prev step\n    const handleBack = () => setActiveStep((prev) => prev - 1);\n\n    // Handle form change\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        // Set values\n        setFormValues((prev) => ({\n            ...prev,\n            [name]: value\n        }));\n\n        // set errors\n        const error = formValidation(name, value, fieldsValidation) || \"\";\n\n        setFormErrors({\n            [name]: error\n        });\n    };\n\n\n\n    const handleSteps = (step) => {\n        switch (step) {\n            case 0:\n                return (\n                    <FirstStep\n                        handleNext={handleNext}\n                        handleChange={handleChange}\n                        values={formValues}\n                        formErrors={formErrors}\n                    />\n                );\n            case 1:\n                return (\n                    <SecondStep\n                        handleNext={handleNext}\n                        handleBack={handleBack}\n                        handleChange={handleChange}\n                        values={formValues}\n                        formErrors={formErrors}\n                    />\n                );\n            case 2:\n                return (\n                    <ThirdStep\n                        handleNext={handleNext}\n                        handleBack={handleBack}\n                        //handleCheck={{handleCheck}}\n                       // values={checkValues}\n                        formErrors={formErrors}\n                    />\n                );\n            case 3:\n                return (\n                    <InvestorConfirm\n                        handleNext={handleNext}\n                        handleBack={handleBack}\n                        values={formValues}\n                    />\n                );\n\n            default:\n                break;\n        }\n    };\n\n    return (\n        <>\n            {activeStep === labels.length ? (\n                // Last Component\n                <InvestorCardCarousel />\n                // <Success values={formValues} />\n            ) : (\n                <>\n                    <Box style={{ margin: \"30px 0 50px\" }}>\n                        {/*} <Typography variant=\"h4\" align=\"center\">\n                            Multi Step Form\n                        </Typography>\n                        <Typography\n                            variant=\"subtitle2\"\n                            align=\"center\"\n                            style={{ margin: \"10px 0\" }}\n                        >\n                            React Material UI multi step form with basic form validation\n                            logic.\n                        </Typography>*/}\n                    </Box>\n                    <Stepper\n                        activeStep={activeStep}\n                        style={{ margin: \"30px 0 15px\" }}\n                        alternativeLabel\n                    >\n                        {labels.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    {handleSteps(activeStep)}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default StepForm;\n"]},"metadata":{},"sourceType":"module"}